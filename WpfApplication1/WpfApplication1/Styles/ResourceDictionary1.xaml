<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" xmlns:Custom1="http://metro.mahapps.com/winfx/xaml/shared">
	<ControlTemplate x:Key="btntipo1" TargetType="{x:Type Button}">
		<Grid Height="138.733" VerticalAlignment="Stretch" Width="180.971">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="-2.667"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle">
									<EasingDoubleKeyFrame KeyTime="0" Value="-2"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="rectangle">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
								<EasingColorKeyFrame KeyTime="0" Value="#FF1111B8"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
								<EasingColorKeyFrame KeyTime="0" Value="#FFF109C7"/>
							</ColorAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="rectangle">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Stretch}"/>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="rectangle">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Stretch}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Rectangle x:Name="rectangle" Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="138.733" Stroke="Black" VerticalAlignment="Top" Width="180.971" RadiusY="18.167" RadiusX="18.167" RenderTransformOrigin="0.5,0.5">
				<Rectangle.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</Rectangle.RenderTransform>
			</Rectangle>
		</Grid>
	</ControlTemplate>
	<Style x:Key="imgtipo1" TargetType="{x:Type Image}"/>
	<!-- Resource dictionary entries should be defined here. -->
	<Style x:Key="btntipo2" TargetType="{x:Type Button}">
		<Setter Property="Custom:ButtonHelper.CornerRadius" Value="3"/>
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Padding" Value="5,6"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="grid" HorizontalAlignment="Stretch" Height="73" VerticalAlignment="Stretch" Width="206" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
											<EasingColorKeyFrame KeyTime="0" Value="#FF0EE4D1"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
											<EasingColorKeyFrame KeyTime="0" Value="#FFDAE40E"/>
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="1.003"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="1.009"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="-0.333"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="-0.333"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.295"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="rectangle" Fill="#FF48E40E" Height="73" Stroke="Black" VerticalAlignment="Stretch" Width="206" RenderTransformOrigin="0.5,0.5">
							<Rectangle.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Rectangle.RenderTransform>
						</Rectangle>
						<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" Height="29.597" Width="137.54" Margin="33.333,21.333,0,0"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Custom:ButtonHelper.PreserveTextCase" Value="False"/>
						<Trigger Property="Custom:ButtonHelper.PreserveTextCase" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True"/>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsKeyboardFocusWithin" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="btntipo3" TargetType="{x:Type Button}">
		<Grid HorizontalAlignment="Stretch" Height="73" VerticalAlignment="Stretch" Width="206">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
								<EasingColorKeyFrame KeyTime="0" Value="#FF0EE4B3"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
								<EasingColorKeyFrame KeyTime="0" Value="#FFE40EDA"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Rectangle x:Name="rectangle" Fill="#FF48E40E" HorizontalAlignment="Stretch" Height="73" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="206" RadiusY="32" RadiusX="32"/>
			<TextBlock HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Stretch" Margin="43.333,20.666,-10.667,15.334" FontFamily="Comic Sans MS"/>
		</Grid>
	</ControlTemplate>
	<Style x:Key="btntile" TargetType="{x:Type Button}">
		<Setter Property="Custom:ButtonHelper.CornerRadius" Value="3"/>
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Padding" Value="5,6"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Margin="0,0,0,-0.667">
						<Grid.RowDefinitions>
							<RowDefinition Height="11*"/>
							<RowDefinition Height="108*"/>
							<RowDefinition Height="34*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:3"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal">
									<Storyboard AutoReverse="True" RepeatBehavior="Forever">
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="Background">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<ImageBrush ImageSource="/WpfApplication1;component/imagenes/quees.jpg" Stretch="Fill" TileMode="FlipY">
														<ImageBrush.RelativeTransform>
															<TransformGroup>
																<ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="1"/>
																<SkewTransform CenterY="0.5" CenterX="0.5"/>
																<RotateTransform CenterY="0.5" CenterX="0.5"/>
																<TranslateTransform/>
															</TransformGroup>
														</ImageBrush.RelativeTransform>
													</ImageBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8.004"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="34"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.667"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0" Value="33.016"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="41.682"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="32.349"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.992"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.113"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.997"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0" Value="1.013"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.127"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.005"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0" Value="-0.666"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="9.667"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-0.333"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" CornerRadius="{Binding (Custom:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,-34,0,0" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="2">
							<Border.Background>
								<ImageBrush ImageSource="/WpfApplication1;component/imagenes/quees.jpg" Stretch="Fill">
									<ImageBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</ImageBrush.RelativeTransform>
								</ImageBrush>
							</Border.Background>
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
						</Border>
						<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.RowSpan="3"/>
						<Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="3">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
						</Border>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="86,59.016,86,35.683" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Row="1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Custom:ButtonHelper.PreserveTextCase" Value="False">
							<Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, Converter={Custom1:ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="Custom:ButtonHelper.PreserveTextCase" Value="True">
							<Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="BorderThickness" TargetName="Border" Value="2"/>
							<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="livetile1" TargetType="{x:Type Button}">
		<Setter Property="Custom:ButtonHelper.CornerRadius" Value="3"/>
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
		<Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Padding" Value="5,6"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard AutoReverse="True" RepeatBehavior="Forever">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-20.01"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-35.351"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-48.024"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-57.362"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-70.035"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-70.035"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-70.035"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-70.035"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="-70.035"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1" Value="-70.035"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1.1" Value="-70.035"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="-69.368"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1.3" Value="-68.701"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="-65.366"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-62.031"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="-58.696"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1.7" Value="-54.694"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="-52.026"/>
											<EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="-48.024"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2" Value="-44.689"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2.1" Value="-41.354"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="-37.352"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2.3" Value="-33.35"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="-29.348"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="-25.346"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="-21.344"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2.7" Value="-18.009"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="-14.674"/>
											<EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="-11.339"/>
											<EasingDoubleKeyFrame KeyTime="0:0:3" Value="-1.334"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.995"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.108"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.995"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.997"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.161"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0" Value="-0.5"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="10.5"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Background">
											<EasingDoubleKeyFrame KeyTime="0" Value="-0.25"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="15.25"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
						</Border>
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Custom:ButtonHelper.PreserveTextCase" Value="False">
							<Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, Converter={Custom1:ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="Custom:ButtonHelper.PreserveTextCase" Value="True">
							<Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter Property="BorderThickness" TargetName="Border" Value="2"/>
							<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>